# Usage:
# ansible-playbook -i 'localhost,' workstation.yml --ask-become-pass 2>&1 | tee -a provision.log
---
- name: Bootstrap workstation
  gather_facts: yes
  connection: local
  hosts: 127.0.0.1
  tasks:
    
    - name: Install general packages
      become: yes
      apt:
        state: present
        update_cache: yes
        name:
          - aptitude
          - curl
          - git
          - jq
          - keepass2
          - mlocate
          - vim
          - wget

# ================== Google Chrome ================== #

    - name: Install Google Chrome browser repository key
      become: yes
      apt_key:
        url: https://dl.google.com/linux/linux_signing_key.pub
        state: present

    - name: Add Google Chrome browser repository to sources list
      become: yes
      apt_repository:
        repo: deb http://dl.google.com/linux/chrome/deb/ stable main
        state: present
        filename: google-chrome

    - name: Install Google Chrome browser
      become: yes
      apt:
        state: present
        update_cache: yes
        name:
          - google-chrome-stable

# ================== Google Cloud SDK ================== #

    - name: Add the Cloud SDK distribution URI as a package source
      become: yes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Google Cloud SDK repository to sources list
      become: yes
      apt_repository:
        repo: deb http://packages.cloud.google.com/apt cloud-sdk main
        state: present
        filename: google-cloud-sdk

    - name: Install Google Cloud SDK
      become: yes
      apt:
        state: present
        update_cache: yes
        name:
          - google-cloud-sdk

# ================== Terraform ================== #

    - name: Install jmespath
      pip:
        name: jmespath
        state: present
        extra_args: --user
    
    - name: Get latest terraform version
      uri:
        url: 'https://checkpoint-api.hashicorp.com/v1/check/terraform'
        method: GET
        status_code: 200
        timeout: 10
      register: release

    - name: Getting latest terraform version
      set_fact:
        version: "{{ release.json | json_query('current_version') }}"

    - name: Create /usr/local/bin
      become: yes
      file:
        path: /usr/local/bin
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Install terraform
      become: yes
      unarchive:
        src: 'https://releases.hashicorp.com/terraform/{{ version }}/terraform_{{ version }}_linux_amd64.zip'
        remote_src: yes
        dest: /usr/local/bin
        owner: root
        group: root
        mode: '0755'

# ================== zsh (oh my zsh) ================== #

    - name: Installing zsh
      become: yes
      apt: 
        name: zsh
        state: latest

    - name: Cloning oh-my-zsh
      git:
        repo=https://github.com/robbyrussell/oh-my-zsh
        dest=~/.oh-my-zsh

    - name: Downloading ~/.zshrc
      get_url:
        url: https://raw.githubusercontent.com/racoon63/setup-workstation/master/zsh/.zshrc
        dest: "/home/{{ ansible_user_id }}/.zshrc"
        mode: 0644

    - name: Get zsh path
      command: which zsh
      register: zsh_path

    - name: Set user shell
      become: yes
      user:
        name: "{{ ansible_user_id }}"
        shell: "{{ zsh_path.stdout }}"

# ================== oh-my-zsh plugins ================== #

    - name: Install thefuck
      pip:
        name: thefuck
        state: present

    - name: Install zsh-autosuggestions
      git:
        repo=https://github.com/zsh-users/zsh-autosuggestions
        dest=~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions

    - name: Install zsh-syntax-highlighting
      git:
        repo=https://github.com/zsh-users/zsh-syntax-highlighting.git
        dest=~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting

# ================== Powerline fonts for zsh (oh my zsh) ================== #

    - name: Install Powerline Fonts
      become: yes
      apt:
        state: present
        update_cache: yes
        name:
          - fonts-powerline

# ================== kubectl ================== #

    - name: Install kubectl repository key
      become: yes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add kubectl repository to sources list
      become: yes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Install kubectl
      become: yes
      apt:
        state: present
        update_cache: yes
        name:
          - kubectl

# ================== Docker ================== #

    - name: Install Docker
      become: yes
      apt:
        state: present
        update_cache: yes
        name:
          - docker.io
          - docker-compose
          - docker-doc

    - name: Enable and start docker daemon
      become: yes
      systemd:
        name: docker
        enabled: yes
        state: started
    
    - name: Setting username variable
      set_fact:
        username: "{{ ansible_user_id }}"

    - name: Add user to docker group
      become: yes
      user:
        append: yes
        groups: 
          - docker
        name: "{{ username }}"

# ================== Snaps ================== #

    - name: Install snaps
      become: yes
      snap:
        name:
          - spotify

# ================== Golang ================== #

    - name: Remove go binary
      become: yes
      file:
        path: /usr/local/go
        state: absent

    - name: Download go
      get_url:
        url: https://golang.org/dl/go1.15.3.linux-amd64.tar.gz
        dest: /tmp/go1.15.3.linux-amd64.tar.gz
        mode: 0440

    - name: Extract go archive into /usr/local
      become: yes
      unarchive:
        src: /tmp/go1.15.3.linux-amd64.tar.gz
        dest: /usr/local
        remote_src: yes

    - name: Add go to PATH
      become: yes
      lineinfile:
        path: "/home/{{username}}/.zshrc"
        state: present
        line: export PATH=$PATH:/usr/local/go/bin

# ================== Helm ================== #

    - name: Install helm repository key
      become: yes
      apt_key:
        url: https://baltocdn.com/helm/signing.asc
        state: present

    - name: Install secure apt transport
      become: yes
      apt:
        state: present
        update_cache: yes
        name:
          - apt-transport-https

    - name: Add helm repository to sources list
      become: yes
      apt_repository:
        repo: deb https://baltocdn.com/helm/stable/debian/ all main
        state: present
        filename: helm

    - name: Install helm
      become: yes
      apt:
        state: present
        update_cache: yes
        name:
          - helm

# ================== Minikube ================== #

    - name: Install xz-utils (dependency of apt deb module)
      become: yes
      apt:
        state: present
        update_cache: yes
        name:
          - xz-utils

    - name: Downloads and installs minikube deb package
      become: yes
      apt:
        state: present
        deb: https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb

# ================== Complete ================== #

    - debug:
        msg: Please reboot your workstation to complete provisioning.